<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.BoardMaria.mappers.Bord">

<!-- 게시물 목록 보기 -->
<select id="list" parameterType="HashMap" resultType="com.BoardMaria.dto.BoardVO"> <!-- id:만들어지는 메소드의 이름과 동일해야함 -->
	select @seq:=@seq+1 as seq, seqno, userid, writer, title, to_char(regdate,'YYYY-MM-DD HH24:MI:SS') as regdate, hitno from (select @seq:=0) a, tbl_board b 
	where writer like concat('%', #{keyword}, '%') or title like concat('%', #{keyword}, '%') or content like concat('%', #{keyword}, '%') order by seq desc limit #{startPoint}, #{postNum}
</select>

<!-- 게시물 등록 -->
<insert id="write" parameterType="com.BoardMaria.dto.BoardVO">
	insert into tbl_board(userid,writer,title,content) values(#{userid}, #{writer}, #{title}, #{content})
</insert>

<!-- 파일 업로드 정보 등록 -->
<insert id="fileInfoRegistry" parameterType="HashMap">
	insert into tbl_file (seqno,userid,org_filename,stored_filename,filesize,checkfile)
	<choose>
		<when test='kind.equals("I")'>
			values ((select auto_increment from information_schema.tables where table_name="tbl_board" and table_schema=DATABASE()),
		#{userid},#{org_filename},#{stored_filename},#{filesize},'Y')
		</when>
		<when test='kind.equals("U")'>
			values (#{seqno},#{userid},#{org_filename},#{stored_filename},#{filesize},'Y')
		</when>
	</choose>	
</insert>

<!-- 다운로드를 위한 파일 정보 가져오기 -->
<select id="fileInfo" parameterType="int" resultType="com.BoardMaria.dto.FileVO">
	select org_filename, stored_filename from tbl_file where fileseqno = #{fileseqno}
</select>

<!-- 게시물 내용 보기에서 업로드된 파일 목록 보기 -->
<select id="fileListView" parameterType="int" resultType="com.BoardMaria.dto.FileVO">
	select fileseqno, org_filename, filesize from tbl_file where seqno = #{seqno} and checkfile='Y'
</select>

<!-- 게시물 수정에서 파일 삭제(나중에 한번에 삭제) -->
<update id="deleteFileList" parameterType="HashMap">
	update tbl_file set checkfile='N' where
	<choose>
		<when test='kind.equals("F")'>
			fileseqno = #{fileseqno}
		</when>
		<when test='kind.equals("B")'>
			seqno = #{seqno}
		</when>
	</choose>
</update>

<!-- 게시물 삭제를 위한 파일 목록 가져 오기 -->
<select id="deleteFileOnBoard" parameterType="int" resultType="com.BoardMaria.dto.FileVO">
	select stored_filename from tbl_file where seqno = #{seqno}
</select>

<!-- 게시물 상세 페이지 -->
<select id="view" parameterType="int" resultType="com.BoardMaria.dto.BoardVO">
	select seqno,userid,writer,title,to_char(regdate,'YYYY-MM-DD HH24:MI:SS') as regdate,content, likecnt, dislikecnt from tbl_board where seqno=#{seqno}
</select>

<!-- 이전 게시물 보기 -->
<select id="pre_seq" parameterType="HashMap" resultType="int">
	<![CDATA[
	select ifnull(max(seqno),0) from tbl_board where seqno < #{seqno} and 
	(writer like concat('%', #{keyword}, '%') or title like concat('%', #{keyword}, '%') or content like concat('%', #{keyword}, '%'))
	]]>
</select>

<!-- 다음 게시물 보기 -->
<select id="next_seqno" parameterType="HashMap" resultType="int">
	<![CDATA[
	select ifnull(min(seqno),0) from tbl_board where seqno > #{seqno} and 
	(writer like concat('%', #{keyword}, '%') or title like concat('%', #{keyword}, '%') or content like concat('%', #{keyword}, '%'))
	]]>
</select>

<!-- 조회수 업데이트 -->
<update id="hitno" parameterType="com.BoardMaria.dto.BoardVO">
	update tbl_board set hitno=(select hitno from tbl_board where seqno = #{seqno}) +1 where seqno = #{seqno}
</update>

<!-- 게시물 수정 -->
<update id="modify" parameterType="com.BoardMaria.dto.BoardVO">
	update tbl_board set writer=#{writer},title=#{title},content=#{content} where seqno = #{seqno}
</update>

<!-- 게시물 삭제 -->
<delete id="delete" parameterType="int">
	delete from tbl_board where seqno=#{seqno}
</delete>

<!-- 좋아요/싫어요 확인 내용 가져 오기-->
<select id="likeCheckView" parameterType="HashMap" resultType="com.BoardMaria.dto.LikeVO">
	select mylikecheck, mydislikecheck from tbl_like where seqno = #{seqno} and userid = #{userid}
</select>

<!-- 좋아요/싫어요 갯수 수정하기 -->
<select id="boardLikeUpdate" parameterType="HashMap">
	update tbl_board set likecnt = #{likecnt}, dislikecnt = #{dislikecnt} where seqno = #{seqno}
</select>

<!-- 좋아요/싫어요 확인 등록하기 -->
<insert id="likeCheckRegistry" parameterType="HashMap">
	insert into tbl_like (seqno,userid,mylikecheck,mydislikecheck,likedate,dislikedate) 
		values (#{seqno},#{userid},#{mylikecheck},#{mydislikecheck},#{likedate},#{dislikedate})
</insert>

<!-- 좋아요/싫어요 확인 수정하기 -->
<update id="likeCheckUpdate" parameterType="HashMap">
	update tbl_like set mylikecheck = #{mylikecheck}, mydislikecheck = #{mydislikecheck},
		likedate = #{likedate}, dislikedate = #{dislikedate}
</update>

<!-- 댓글 보기 -->
<select id="replyView" parameterType="com.BoardMaria.dto.ReplyVO" resultType="com.BoardMaria.dto.ReplyVO">
	select replyseqno, replywriter, replycontent, to_char(replyregdate,'YYYY-MM-DD HH24:MI:SS')  
		as replyregdate,userid from tbl_reply where seqno = #{seqno}    
		order by replyseqno desc
</select> 

<!-- 댓글 등록 -->
<insert id="replyRegistry" parameterType="com.BoardMaria.dto.ReplyVO">
	insert into tbl_reply (seqno, userid, replywriter, replycontent) values  
		(#{seqno},#{userid},#{replywriter},#{replycontent})
</insert>

<!-- 댓글 수정 -->
<update id="replyUpdate" parameterType="com.BoardMaria.dto.ReplyVO">
	update tbl_reply set replycontent = #{replycontent} where replyseqno = #{replyseqno}
</update>

<!-- 댓글 삭제 -->
<delete id="replyDelete" parameterType="com.BoardMaria.dto.ReplyVO">
	delete from tbl_reply where replyseqno = #{replyseqno}
</delete>

<!-- 전체 게시물 갯수 계산 -->
<select id="getTotalCount" parameterType="String" resultType="int">
	select count(*) from tbl_board where writer like concat('%', #{keyword}, '%') or title like concat('%', #{keyword}, '%') or content like concat('%', #{keyword}, '%');
</select>
</mapper>